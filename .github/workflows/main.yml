name: Sparsom

on:
  push:
    paths-ignore:
      - '.idea/**'
      - 'README.md'
      - 'LICENSE'
      - 'CODEOWNERS'
    branches:
      - main
env:
  CONTAINER_REGISTRY: europe-north1-docker.pkg.dev
jobs:
  set_version:
    name: set image name
    runs-on: ubuntu-latest
    steps:
      - name: create docker tag
        run: echo "TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
    outputs:
      tag: ${{ env.TAG }}

  build:
    name: build docker image
    runs-on: ubuntu-latest
    needs: set_version
    strategy:
      fail-fast: false
      matrix:
        app: [sparsom, api, opprydding]
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21.x'
          cache: 'gradle'
      - name: test and build
        run: ./gradlew ${{ matrix.app }}:build
        env:
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: build docker image
        uses: nais/docker-build-push@v0
        with:
          team: tbd
          tag: ${{ needs.set_version.outputs.tag }}
          image_suffix: ${{ matrix.app }}
          dockerfile: Dockerfile
          docker_context: ${{ matrix.app }}

  deployDev:
    name: deploy to dev
    needs: [set_version, build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev.yml,deploy/dev-opensearch.yml,deploy/dev-serviceintegration.yml
          IMAGE: ${{ env.CONTAINER_REGISTRY }}/${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}/tbd/${{ github.event.repository.name }}-sparsom:${{ needs.set_version.outputs.tag }}
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev-api.yml
          IMAGE: ${{ env.CONTAINER_REGISTRY }}/${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}/tbd/${{ github.event.repository.name }}-api:${{ needs.set_version.outputs.tag }}
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev-opprydding.yml
          IMAGE: ${{ env.CONTAINER_REGISTRY }}/${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}/tbd/${{ github.event.repository.name }}-opprydding:${{ needs.set_version.outputs.tag }}

  deployProd:
    name: deploy to prod
    needs: [set_version, build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: deploy/prod.yml,deploy/prod-opensearch.yml,deploy/hpa.yml,deploy/prod-serviceintegration.yml
          IMAGE: ${{ env.CONTAINER_REGISTRY }}/${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}/tbd/${{ github.event.repository.name }}-sparsom:${{ needs.set_version.outputs.tag }}
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: deploy/prod-api.yml
          IMAGE: ${{ env.CONTAINER_REGISTRY }}/${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}/tbd/${{ github.event.repository.name }}-api:${{ needs.set_version.outputs.tag }}
